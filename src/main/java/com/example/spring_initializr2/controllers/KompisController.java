package com.example.spring_initializr2.controllers;


import com.example.spring_initializr2.models.Kompis;
import com.example.spring_initializr2.repositories.KompisRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController     // This means that this class is a Controller
@RequestMapping("/demo")        // This means URL's start with /demo (after Application path)
public class KompisController {

    // This means to get the bean called bookRepository
    @Autowired
    // Which is auto-generated by Spring, we will use it to handle the data
    private KompisRepository kompisRepository;

    //http://localhost:8080/demo/add?namn=Jason%20Smith&telefonnummer=45654654654
    @GetMapping("/add")
    public String addNewKompis(@RequestParam String namn,
                               @RequestParam String telefonnummer) {
        // @RequestParam means it is a parameter from the GET or POST request

        Kompis k = new Kompis();
        k.setNamn(namn);
        k.setTelefonnummer(telefonnummer);
        kompisRepository.save(k);
        return "Saved";
    }


    // ANVÄNT INTE DET HÄR!!!
    //för att posta från kommandoraden: curl localhost:8080/demo/add -d title=First -d author=SomeGuy
    // https://kompis-agenda-app.herokuapp.com/demo/add?namn=Peter%20Hansel&telefonnummer=075324197
    @PostMapping( "/add") // Map ONLY POST Requests
    public String addNewKompisByPost(@RequestParam String namn,
                                     @RequestParam String telefonnummer) {
        // @RequestParam means it is a parameter from the GET or POST request

        Kompis k = new Kompis(namn, telefonnummer);
        kompisRepository.save(k);
        return "Saved";
    }

    // https://kompis-agenda-app.herokuapp.com/demo/all
    @GetMapping("/all")
    public Iterable<Kompis> getAllKompis() {
            // This returns a JSON or XML with the books
            return kompisRepository.findAll();

    }

    // I use this method to count the amount of kompis.
    // count(); method is already in 'CrudRepository'. See 'Kompis Repository'.
    // http://localhost:8080/demo/howMany
//    @GetMapping("/howMany")
//    public Long howMany() {
//        return kompisRepository.count();
//    }

    @GetMapping("/howMany")
    public String howMany() {
        return "Number of friends on the list: " + kompisRepository.count();
    }

    // I created this one to be able to work with Postman
    @PostMapping("/addKompis")
    public String addKompis(@RequestBody Kompis k) {
        kompisRepository.save(k);
        return "Saved";
    }


    // https://kompis-agenda-app.herokuapp.com/demo/kompis?namn=Emily%20Brown
    @GetMapping("/kompis")
    public Iterable<Kompis> getKompisByNamn(@RequestParam(required = false) String namn,
                                            @RequestParam(required = false) String telefonnummer) {
        // @RequestParam means it is a parameter from the GET or POST request
        if (namn != null && telefonnummer != null) {
            return kompisRepository.findByNamnAndTelefonnummer(namn, telefonnummer);
        } else if (namn != null) {
            return kompisRepository.findByNamn(namn);
        } else if (telefonnummer != null) {
            return kompisRepository.findByTelefonnummer(telefonnummer);
        }
        return null;
    }

    @GetMapping("/delete/{id}")
    public String deleteKompisById(@PathVariable long id) {
        kompisRepository.deleteById(id);
        return "Kompis was deleted";
    }

}
